import { jsPDF } from 'jspdf'

export function generateApplicationPackagePDF(application) {
  const doc = new jsPDF()
  const pageWidth = doc.internal.pageSize.getWidth()
  const pageHeight = doc.internal.pageSize.getHeight()
  const margin = 15
  const contentWidth = pageWidth - 2 * margin
  let yPosition = margin

  // Helper function to add text with automatic line breaking
  const addWrappedText = (text, fontSize, isBold = false, color = [0, 0, 0]) => {
    doc.setFontSize(fontSize)
    doc.setTextColor(...color)
    if (isBold) {
      doc.setFont(undefined, 'bold')
    } else {
      doc.setFont(undefined, 'normal')
    }
    const lines = doc.splitTextToSize(text, contentWidth)
    lines.forEach((line) => {
      if (yPosition > pageHeight - margin) {
        doc.addPage()
        yPosition = margin
      }
      doc.text(line, margin, yPosition)
      yPosition += 5
    })
  }

  // Helper function to add a section with page break
  const addSection = (title, startNewPage = false) => {
    if (startNewPage) {
      doc.addPage()
      yPosition = margin
    } else {
      yPosition += 5
      if (yPosition > pageHeight - margin - 10) {
        doc.addPage()
        yPosition = margin
      }
    }
    addWrappedText(title, 14, true, [59, 130, 246])
    yPosition += 2
  }

  // Cover Page
  addWrappedText('elevaitr Application Package', 16, true, [59, 130, 246])
  yPosition += 3
  addWrappedText(`${application.company} - ${application.jobTitle}`, 12, true)
  addWrappedText(`Applied: ${new Date(application.dateApplied).toLocaleDateString()}`, 10, false, [100, 100, 100])
  yPosition += 5

  // Job Description
  if (application.jobDescription) {
    addSection('Job Description')
    addWrappedText(application.jobDescription, 10, false)
  }

  // Resume - SAME PAGE (flows naturally)
  if (application.outputs?.resume) {
    addSection('Optimized Resume', false)
    addWrappedText(application.outputs.resume, 10, false)
  }

  // Cover Letter - NEW PAGE
  if (application.outputs?.coverLetter) {
    addSection('Cover Letter', true)
    addWrappedText(application.outputs.coverLetter, 10, false)
  }

  // Interview Prep - NEW PAGE
  if (application.outputs?.interviewPrep) {
    addSection('Interview Preparation', true)
    addWrappedText(application.outputs.interviewPrep, 10, false)
  }

  // LinkedIn Profile - NEW PAGE
  if (application.outputs?.linkedin || application.outputs?.linkedinProfile) {
    const linkedinContent = application.outputs.linkedin || application.outputs.linkedinProfile
    addSection('LinkedIn Profile Optimization', true)
    addWrappedText(linkedinContent, 10, false)
  }

  // Footer
  yPosition = pageHeight - 10
  doc.setFontSize(8)
  doc.setTextColor(150, 150, 150)
  doc.text('Generated by elevaitr - Elevate Your Job Search', margin, yPosition)

  // Save the PDF
  const filename = `${application.company}-${application.jobTitle}-${new Date().toISOString().split('T')[0]}.pdf`
  doc.save(filename)
}
